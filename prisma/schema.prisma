generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id            String   @id  @unique  @default(uuid())
  name          String   @db.VarChar(255)
  email         String   @unique @db.VarChar(255)
  phone         String   @unique @db.VarChar(20)
  password      String
  industry      String?  @db.VarChar(100)
  website       String?  @db.VarChar(255)
  address       String?  @db.Text
  description   String?  @db.Text
  parentCompany String?  @db.VarChar(255)
  adminName     String?  @db.VarChar(255)
  jobTitle      String?  @db.VarChar(100)
  primaryColor  String?  @db.VarChar(7)
  secondaryColor String? @db.VarChar(7)
  logo          String?  @db.Text
  socialMedia   String[] @db.Text
  users         User[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())

  @@map("companies")
}

model User {
  id          String   @id   @unique @default(uuid())
  name        String?  @db.VarChar(255)
  email       String   @db.VarChar(255)
  phone       String?  @db.VarChar(20)
  companyId   String
  company     Company  @relation(fields: [companyId], references: [id])
  totalPoints Float    @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  transactions Transaction[]
  // role
  @@map("users")
}

// try inheriting user properties to create customer, admin, super customer etc


model Transaction {
  id            String   @id @unique @default(uuid())
  userId        String
  user          User     @relation(fields: [userId], references: [id])
  dateTime      DateTime? @default(now())
  updatedAt     DateTime? @default(now())
  points        Float
  validUntil    DateTime?
  availablePoints     Float? @default(0)

  @@map("transactions")
  @@index([userId])
}


// todo create log tables for verification
// consider changes if there is third party otp
